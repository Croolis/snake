
<!DOCTYPE html>
<html>
  
  <head>
    <script type="text/javascript">
    
      //Global variables
      var picWidth = 20; // width of the canvas
      var picHeight = 20; // height of the canvas
      var picLength = picWidth * picHeight; // number of chunks
      var myImage = new Image(); // Create a new blank image.
      
      function displayImage() {

        canvas = document.getElementById("myCanvas");

        if (canvas.getContext) {

          context = canvas.getContext("2d");

          myImage.onload = function() {
            //context.drawImage(myImage, 0, 0);

            //getColorData( 200, 0, 0);

            //putColorData();
            /*img = recolored_image(myImage, 0, 200, 0);
            context.putImageData(img, 0, 20);
            img = recolored_image(myImage, 0, 0, 200);
            context.putImageData(img, 0, 40);
            img = recolored_image(myImage, 200, 200, 0);
            context.putImageData(img, 0, 60);
            img = recolored_image(myImage, 200, 0, 200);
            context.putImageData(img, 0, 80);
            img = recolored_image(myImage, 0, 200, 200);
            context.putImageData(img, 0, 100);
            img = recolored_image(myImage, 200, 200, 200);
            context.putImageData(img, 0, 120);
            img = recolored_image(myImage, 0, 0, 0);
            context.putImageData(img, 0, 140);
            var img = recolored_image(myImage, 200, 0, 0);
            context.putImageData(img, 0, 160);*/
          }

          myImage.src = "body.png";

        var rotImage = new Image();

        rotImage.onload = function() {
            var img = recolored_image(rotImage, 0, 200, 0);
            //context.putImageData(img, 0, 0);
        }

        rotImage.src = "rotation.png";

        var b2 = new Image();

        b2.onload = function() {
            /*var img = recolored_image(b2, 0, 200, 0);
            context.putImageData(img, 20, 0);
            img = recolored_image(b2, 200, 0, 0);
            context.putImageData(img, 40, 0);
            img = recolored_image(b2, 0, 0, 200);
            context.putImageData(img, 60, 0);
            img = recolored_image(b2, 0, 200, 200);
            context.putImageData(img, 80, 0);*/
        }
        b2.src = "body2.png";

        var back = new Image();
        back.onload = function() {
            for(var i = 0; i<20; i++) {
                for(var j = 0; j<20; j++) {
                    context.drawImage(back, i*20, j*20);
                }
            }
        }
        back.src = "img/grass_11.jpg";

        }
      }

        function getColorData(red, green, blue) {

        

        myImage = context.getImageData(0, 0, 20, 20);

        for (var i = 0; i < picLength * 4; i += 4) {
          if(myImage.data[i] <= 50 && myImage.data[i+1] <= 50 && myImage.data[i+2] <= 50) {
            myImage.data[i] += red;
            myImage.data[i+1] += green;
            myImage.data[i+2] += blue;
          // First bytes are red bytes.
          // Second bytes are green bytes.
          // Third bytes are blue bytes.
          // Fourth bytes are alpha bytes
        }
      }
    }
    function recolored_image(image, red, green, blue) { // возвращает перекрашенную картинку. Рисуется на канвас с помощью putImageData(img, x, y)
        var tmpImage = context.getImageData(0, 0, image.width, image.height);
        context.drawImage(image, 0, 0);
        var imageData = context.getImageData(0, 0, image.width, image.height);
        context.putImageData(tmpImage, 0, 0); // восстановление канваса

        var color_barrier = 50;  // все цвета от 0 до color_barrier будут перекрашиваться

        for(var i = 0; i < image.width * image.height * 4; i += 4) {
            if(imageData.data[i] <= color_barrier && imageData.data[i+1] <= color_barrier && imageData.data[i+2] <= color_barrier) {
                imageData.data[i] += red;
                imageData.data[i+1] += green;
                imageData.data[i+2] += blue;
                // imageData.data[i+3]  <-- альфа-канал
            }
        }

        return imageData;
    }

      function putColorData() {

        context.putImageData(myImage, 0, 0);
        context.putImageData(myImage, 0, 20);
        context.putImageData(myImage, 0, 40);
        context.putImageData(myImage, 0, 60);
        context.putImageData(myImage, 0, 80);
      }
      
      function noPhoto() {
      
        alert("Please put a .png file in this folder and name it kestral.png.");
        
        }        

/*
        var canvas2 = document.getElementById("myCanvas");
        var context;
        context = canvas2.getContext("2d");

        snake = function() {
            this.coords = new Array();
            this.direction = 1 ; // 1 - вверх, 2 - вправо, 3 - вниз, 4 - влево
            this.set = function(data) {
                coords = data;
            }
            this.head = 0; // спрайт головы
            this.body = 0; 
            this.rotation = 0;
            this.draw = function() {
                for(var i = 0; i < coords.length; i++) {
                    context.putImageData(body, coords[i][0]*20, coords[i][1]*20);
                }
            }
        }

        var sn = new snake();
        sn.set([ [5, 0], [5, 1], [5, 2], [5, 3] ]);
        var bodyImg = new Image();
        bodyImg.onload = function() {
            sn.body = recolored_image(bodyImg, 0, 200, 0);
            alert(1);
        }
        bodyImg.src = "body.png";
        sn.draw();*/


    </script>
  </head>
  
  <body onload="displayImage()">
    <h1>
      American Kestral
    </h1>
    <p>
      The original image is on the left and the modified image is on the right.
    </p>
    <img id="myPhoto" src="body.png" onerror="noPhoto()">
    <canvas id="myCanvas" width="200" height="200">
    </canvas>
    <script>
var canvas2 = document.getElementById("myCanvas");
        var context;
        context = canvas2.getContext("2d");

        snake = function() {
            this.coords = new Array();
            this.direction = 1 ; // 1 - вверх, 2 - вправо, 3 - вниз, 4 - влево
            this.head = 0; // спрайт головы
            this.body = 0; 
            this.rotation = 0;
            this.set = function(data) {
                coords = data;
            }
            this.draw = function() {
                for(var i = 1; i < coords.length-1; i++) {
                    if( (coords[i-1][1] < coords[i][1] && coords[i+1][1] > coords[i][1]) ||      // *
                        (coords[i-1][1] > coords[i][1] && coords[i+1][1] < coords[i][1]))        // *
                    {                                                                            // *
                        context.putImageData(this.body, coords[i][0]*20, coords[i][1]*20);
                        //alert(1);
                    } else if ( (coords[i-1][0] < coords[i][0] && coords[i+1][0] > coords[i][0]) ||    // ***
                                (coords[i-1][0] > coords[i][0] && coords[i+1][0] < coords[i][0]) )
                    {

                        context.save();
		                context.translate(120, 120);//coords[i][0]*20 + 10, coords[i][1]*20 + 10);
		                context.rotate(30 * Math.PI / 180);
                        context.putImageData(this.body,-25, -25);// -coords[i][0]*20/2, -coords[i][1]*20/2);
		                context.restore();
                        //alert(2);
                    }


                }
            }

        }

        var sn = new snake();
        sn.set([ [5, 0], [5, 1], [5, 2], [5, 3], [6, 3], [7, 3], [8, 3], [9, 3] ]);
        var bodyImg = new Image();
        bodyImg.onload = function() {
            sn.body = recolored_image(bodyImg, 0, 200, 0);
            //sn.draw();
        }
        bodyImg.src = "body.png";

        function recolored_sprite(image, red, green, blue, x, y, size) {
            var tmpImage = context.getImageData(0, 0, image.width, image.height);
            context.drawImage(image, 0, 0);
            var imageData = context.getImageData(x, y, size, size);
            context.putImageData(tmpImage, 0, 0); // восстановление канваса
            var color_barrier = 50;  // все цвета от 0 до color_barrier будут перекрашиваться

            for(var i = 0; i < size * size * 4; i += 4) {
                if(imageData.data[i] <= color_barrier && imageData.data[i+1] <= color_barrier && imageData.data[i+2] <= color_barrier) {
                    imageData.data[i] += red;
                    imageData.data[i+1] += green;
                    imageData.data[i+2] += blue;
                    imageData.data[i+3] = 0;  <-- альфа-канал
                    console.log(imageData.data[i+3]);
                } else if(imageData.data[i+3] == 0) {
///                    imageData.data[i+3] = 255;
                }
            }
            console.log(imageData.data[0], imageData.data[1], imageData.data[2], imageData.data[3]);

            return imageData;
        }
        
        function get_sprites(image, red, green, blue) {  
            var result = [];
            var sp_height = 7, sp_width = 4, sp_size = 20;
            var G = function(x, y) {
                return recolored_sprite(image, red, green, blue, x*sp_size, y*sp_size, sp_size);
            }

            result["HD"] = [ G(0, 0), G(1, 0) ]; // Head Down
            result["HU"] = [ G(0, 1), G(1, 1) ]; // Head Up
            result["HL"] = [ G(2, 0), G(3, 0) ]; // Head Left
            result["HR"] = [ G(2, 1), G(3, 1) ]; // Head Right
            result["BU"] = [ G(0, 2), G(1, 2) ]; // Body Up\Down
            result["BL"] = [ G(2, 2), G(3, 2) ]; // Body Left\Right
            result["TU"] = [ G(0, 3), G(1, 3) ]; // Tail Up  (остальное тело змеи выше)
            result["TR"] = [ G(2, 3), G(3, 3) ]; // Tail Right (остальное тело змеи справа)
            result["TL"] = [ G(2, 4), G(3, 4) ]; // Tail Left (остальное тело змеи слева)
            result["TD"] = [ G(0, 4), G(1, 4) ]; // Tail Down (остальное тело змеи снизу)
            result["RR"] = [ G(0, 5), G(2, 5) ]; // Rotation Right
            result["RL"] = [ G(1, 5), G(3, 5) ]; // Rotation Left
            result["RU"] = [ G(0, 6), G(2, 6) ]; // Rotation Up
            result["RD"] = [ G(1, 6), G(3, 6) ]; // Rotation Down

            return result;
            // Rotation Right:
            // **
            // *

            // Rotation Left:
            // **
            //  *

            // Rotation Up:
            // *
            // **

            // Rotation Down:
            //  *
            // **
        }
        var allSprites = new Image();
        var d;
        allSprites.onload = function() {
            d = get_sprites(allSprites, 240, 0, 0);
            context.putImageData(d["HU"][0], 40, 40);
            context.putImageData(d["BU"][1], 40, 60);
            context.putImageData(d["BU"][0], 40, 80);
            context.putImageData(d["BU"][1], 40, 100);
            context.putImageData(d["BU"][0], 40, 120);
            context.putImageData(d["RU"][1], 40, 140);
            context.putImageData(d["BL"][0], 60, 140);
            context.putImageData(d["BL"][1], 80, 140);
            context.putImageData(d["BL"][0], 100, 140);
            context.putImageData(d["BL"][1], 120, 140);
            context.putImageData(d["TL"][0], 140, 140);
                //context.putImageData(d["HR"][0], 100, 40);
                //context.putImageData(d["BL"][1], 80, 40);
                //context.putImageData(d["BL"][0], 60, 40);
                //context.putImageData(d["BL"][1], 40, 40);
                //context.putImageData(d["TR"][0], 20, 40);
        }
        allSprites.src = "snake.png";



        function a(i) {
                
                //context.clearRect(0, 0, canvas2.width, canvas2.height);
            context.putImageData(d["HU"][0], 40, 40);
            context.putImageData(d["BU"][1], 40, 60);
            context.putImageData(d["BU"][0], 40, 80);
            context.putImageData(d["BU"][1], 40, 100);
            context.putImageData(d["BU"][0], 40, 120);
            context.putImageData(d["RU"][1], 40, 140);
            context.putImageData(d["BL"][0], 60, 140);
            context.putImageData(d["BL"][1], 80, 140);
            context.putImageData(d["BL"][0], 100, 140);
            context.putImageData(d["BL"][1], 120, 140);
            context.putImageData(d["TL"][0], 140, 140);
                //context.putImageData(d["HR"][0], 100, 40);
        }
        
    </script>
    <p>
      Public domain image courtesy of U.S. Fish and Wildlife Service.
    </p>
  </body>

</html>
